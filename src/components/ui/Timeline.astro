---
import { twMerge } from 'tailwind-merge';
import type { Item } from '~/types';

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {} } = Astro.props as Props;

const {
  container: containerClass = 'relative',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-white dark:text-slate-200 border-black dark:border-white-700',
} = classes;
---

{
  items && items.length && (
    <div class={containerClass}>
      <div
        class="absolute mt-5 bg-black ml-10 roate-90 md:rotate-0 hidden lg:display"
        style={{ height: '1px', width: 'calc(100% - 2.5rem)' }}
      />

      <div class="flex md:flex-wrap flex-col md:flex-row md:gap-5">
        {items.map(({ title, description, classes: itemClasses = {} }, index = 0) => (
          <div
            class={twMerge(
              `flex md:flex-col items-stretch md:w-[calc(50%-0.75rem)] lg:w-[calc(25%-1.25rem)] relative h-full`,
              panelClass,
              itemClasses?.panel
            )}
          >
            <div class="flex flex-col md:items-start relative">
              <div class="relative">
                <div class="flex items-center justify-center header relative">
                  <span
                    class={twMerge(
                      'flex items-center justify-center w-10 h-10 p-2 bg-black rounded-full border-2',
                      defaultIconClass,
                      itemClasses?.icon
                    )}
                  >
                    {index + 1}
                  </span>
                </div>
              </div>
              <div class="absolute mt-5 bg-black ml-10 w-full hidden md:block" style={{ height: '2px' }} />
              <div class="aboslute bg-black md:hidden ml-5 h-full" style={{ width: '2px' }} />
            </div>

            <div class=" ml-4 md:ml-0 mt-2 pb-5 md:pb-0">
              {title && <p class={twMerge('text-2xl font-bold', titleClass, itemClasses?.title)} set:html={title} />}
              {description && (
                <p
                  class={twMerge('text-muted mt-2', descriptionClass, itemClasses?.description)}
                  set:html={description}
                />
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}
