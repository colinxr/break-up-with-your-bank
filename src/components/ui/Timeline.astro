---
import { twMerge } from 'tailwind-merge';
import type { Item } from '~/types';

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props;

const {
  container: containerClass = 'relative',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-white dark:text-slate-200 border-black dark:border-white-700',
} = classes;
---

{
  items && items.length && (
    <div class={containerClass}>
      <div
        class="absolute mt-5 bg-black ml-10 roate-90 md:rotate-0 "
        style={{ height: '1px', width: 'calc(100% - 2.5rem)' }}
      />

      <div class="flex flex-col md:flex-row gap-5">
        {items.map(({ title, description, icon, classes: itemClasses = {} }, index = 0) => (
          <div
            class={twMerge(`flex flex-col items-stretch relative h-full`, panelClass, itemClasses?.panel)}
            style={{ width: '100%' }}
          >
            <div class="flex flex-col items-start relative">
              <div class="relative">
                <div class="flex items-center justify-center header relative">
                  {(icon || defaultIcon) && (
                    <span
                      class={twMerge(
                        'flex items-center justify-center w-10 h-10 p-2 bg-black rounded-full border-2',
                        defaultIconClass,
                        itemClasses?.icon
                      )}
                    >
                      {index + 1}
                    </span>
                  )}
                </div>
              </div>
              <div class="absolute mt-5 bg-black ml-10 md:hidden" style={{ height: '1px', width: '100%' }} />

              {index !== items.length - 1 && <div class="w-px h-full bg-black/10 dark:bg-slate-400/50" />}
            </div>
            <div class="p-6 ml-0 mt-4  rounded-md bg-gray-200/50">
              {title && <p class={twMerge('text-2xl font-bold', titleClass, itemClasses?.title)} set:html={title} />}
              {description && (
                <p
                  class={twMerge('text-muted mt-2', descriptionClass, itemClasses?.description)}
                  set:html={description}
                />
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}
